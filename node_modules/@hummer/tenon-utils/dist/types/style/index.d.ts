declare class StyleTransformer {
    private middlewares;
    constructor();
    registerMiddleware(): void;
    use(middleware: Function): this;
    transformStyle(style?: Record<string, string>, view?: any): Record<string, string> | null;
}
declare class StyleDynamicTransformer {
    private middlewares;
    constructor();
    registerMiddleware(): void;
    use(middleware: Function): this;
    transformStyle(style?: Record<string, string>, view?: any): Record<string, string> | null;
}
export declare const styleTransformer: StyleTransformer;
export declare const styleDynamicTransformer: StyleDynamicTransformer;
export { transformUnitValue } from './transformer/unit';
export { getColor } from './common/color';
