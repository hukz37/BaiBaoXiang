import { Base } from '../nodes/Base';
import { ComponentInternalInstance } from '@vue/runtime-core';
interface Invoker extends EventListener {
    value: EventValue;
}
declare type EventValue = Function & {
    invoker?: Invoker | null;
};
export declare function patchEvents(el: Base, rawName: string, prevValue: EventValue | null, nextValue: EventValue | null, instance?: ComponentInternalInstance | null): void;
export declare function addEventListener(el: Base, event: string, handler: EventListener): void;
export declare function removeEventListener(el: Base, event: string, handler: EventListener): void;
export declare function getStaticEventName(rawName: string): string;
export {};
