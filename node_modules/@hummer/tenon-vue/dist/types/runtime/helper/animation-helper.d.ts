export declare enum EasingType {
    LINEAR = "linear",
    EASE = "ease",
    EASE_IN = "ease-in",
    EASE_OUT = "ease-out",
    EASE_IN_OUT = "ease-in-out"
}
export declare enum AnimationStyle {
    POSITION = "position",
    SCALE = "scale",
    SCALEX = "scaleX",
    SCALEY = "scaleY",
    ROTATIONX = "rotationX",
    ROTATIONY = "rotationY",
    ROTATIONZ = "rotationZ",
    OPACITY = "opacity",
    BACKGROUND_COLOR = "backgroundColor",
    WIDTH = "width",
    HEIGHT = "height"
}
export declare type Animation = KeyframeAnimation | BasicAnimation | StepAnimation;
export interface BasicAnimation {
    id: string | number;
    styles: Record<string, string | number>;
    duration: number;
    delay: number;
    repeatCount: number;
    easing: EasingType;
    onStart?: Function;
    onEnd?: Function;
}
export interface KeyFrame {
    percent: number;
    styles: Record<string, string | number>;
}
export interface KeyframeAnimation {
    id: string | number;
    keyframes: Array<KeyFrame>;
    duration: number;
    delay: number;
    repeatCount: number;
    easing: EasingType;
    onStart: Function;
    onEnd: Function;
}
export interface StepAnimation {
    id: string | number;
    steps: Array<BasicAnimation>;
    onStart?: Function;
    onEnd?: Function;
}
export declare function handleKeyframeAnimation(node: any, animation: KeyframeAnimation): void;
export declare function handleBasicAnimation(node: any, animation: BasicAnimation): void;
export declare function handleStepAnimation(node: any, animation: StepAnimation): void;
export declare const handleAnimation: (context: any, animation: Animation) => void;
