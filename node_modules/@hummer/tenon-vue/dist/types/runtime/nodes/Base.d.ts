import { Animation } from '../helper/animation-helper';
export declare class Base {
    _scopedIds: Set<string>;
    __NAME: Symbol | null;
    element: any;
    dataset: any;
    protected children: Set<Base>;
    parent?: Base;
    firstChild: Base | null;
    lastChild: Base | null;
    prevSibling: Base | null;
    nextSibling: Base | null;
    private props;
    __view_id: number;
    protected _defaultStyle: Record<string, string> | null;
    protected _style: Record<string, string> | null;
    private _baseStyle;
    constructor();
    get disabled(): Boolean;
    set disabled(disabled: Boolean);
    get style(): Record<string, string>;
    get className(): any;
    set style(value: Record<string, string>);
    setScopeId(id: string): void;
    updateStyle(): void;
    private _onMounted;
    protected onMounted(): void;
    private _onDestoryed;
    protected onDestoryed(): void;
    _appendChild(child: Base): void;
    private unlinkSiblings;
    _removeChild(child: Base): void;
    _insertBefore(child: Base, anchor: Base): void;
    setElementText(text: string): void;
    setStyle(style: any, flag?: boolean): void;
    protected hackForStyle(style: any, base: Base): Record<string, string> | null;
    setAttribute(key: string, value: any): void;
    private setCacheProp;
    protected _setAttribute(key: string, value: any): void;
    getAttribute(key: string): any;
    handleAnimation(animation: Animation): void;
    addEventListener(event: string, func: Function): void;
    removeEventListener(event: string, func?: Function): void;
    getRect(func: Function): void;
}
